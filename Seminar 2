# 2 |Seminar. Branched

## Branch creating

* *git checkout branch_name* - команда, осуществляющая переход на ветку *branch_name*;

* *git branch* - команда, отображающая список веток и текущею.

* *git branch_ branch_name* - команда, инициализирующую ветку с именем *branch_name*

## Branch merging

* *git merge branch_name* - команда, сливающая текущую ветку с веткой *branch_name*;

* *git_branch -d branch name* - команда, удаляющая ветку *branch_name*;

## Conflicts

Конфликты возникают при наличии в сливаемых ветках коммитов, претендующих на общее рабочее пространство;

1. Ветка - это набор commit (кружок), которые идут друг за другом;
* Info: Другие ветки - это отдельное место для реализации нового функционала или исправление багов (ошибок) нашего проекта. То есть, с отдельной веткой вы делаете что угодно, а затем сливаете эти изменения в основную ветку master.
*  То есть, с отдельной веткой вы делаете что угодно, а затем сливаете эти изменения в основную ветку master

2. Команда merge берет все изменения из ветки (например bugFix) и добавляет их в ветку master.


 Другие пользователи не увидят вашу ветку, пока она не будет отправлена на удаленный репозиторий.

 3. Diff - Просмотреть изменения относительно двух веток можно командой.



4. Команда git status относительно проста в использовании.